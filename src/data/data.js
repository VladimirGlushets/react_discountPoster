const baseUrl = process.env.REACT_APP_BASE_URL;

export async function getMyPreferencies(userId) {
  let url = baseUrl + "/api/MyPreferences/" + userId;

  try {    
    const response = await fetch(url, {
      headers: {
        "x-functions-key": process.env.REACT_APP_MYPREFERENCES_API_KEY
      },
    });
    return await response.json();
  } catch (e) {
    console.log(e);
    return null;
  }
}

export async function getPreference(userId, categoryId) {
  let url = baseUrl + "/api/MyPreferences/" + userId + "/" + categoryId;

  try {    
    const response = await fetch(url, {
      headers: {
        "x-functions-key": process.env.REACT_APP_MYPREFERENCES_API_KEY
      },
    });
    return await response.json();
  } catch (e) {
    console.log(e);
    return null;
  }
}

export async function deletePreference(userId, data) {
  let url = baseUrl + "/api/MyPreferences/" + userId;

  try {
    await fetch(url, {
      method: "DELETE",
      body: JSON.stringify(data),
      headers: {
        "Content-type": "application/json; charset=UTF-8",
        "x-functions-key": process.env.REACT_APP_MYPREFERENCES_API_KEY
      },
    });
  } catch (e) {
    console.log(e);
  }
}

export async function upsertPreference(userId, data) {
  let url = baseUrl + "/api/MyPreferences/" + userId;

  try {
    await fetch(url, {
      method: "POST",
      body: JSON.stringify(data),
      headers: {
        "Content-type": "application/json; charset=UTF-8",
        "x-functions-key": process.env.REACT_APP_MYPREFERENCES_API_KEY
      },
    });
  } catch (e) {
    console.log(e);
  }
}

export async function getAllGroups() {
  return [
    {
      groupId: 202000054,
      icon: "üì±",
      displayName: "–ú–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã",
    },
    {
      groupId: 202004207,
      icon: "üçΩ",
      displayName: "–ö—É—Ö–Ω—è, —Å—Ç–æ–ª–æ–≤–∞—è –∏ –±–∞—Ä",
    },
    {
      groupId: 202040075,
      icon: "ü™¢",
      displayName: "–•–æ–±–±–∏ –∏ —Ä—É–∫–æ–¥–µ–ª–∏–µ",
    },
  ];
}

export async function getAllCategoriesForGroup(groupId) {
  return [
    {
      categoryId: 202000054,
      icon: "üçΩ",
      displayName: "–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã",
    },
    {
      categoryId: 202004207,
      icon: "üçΩ",
      displayName: "–ù–æ—Å–∏–º—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞",
    },
    {
      categoryId: 202040075,
      icon: "üçΩ",
      displayName: "–ù–∞—É—à–Ω–∏–∫–∏ –∏ –≥–∞—Ä–Ω–∏—Ç—É—Ä—ã",
    },
    {
      categoryId: 202060849,
      icon: "üçΩ",
      displayName: "–ß–µ—Ö–ª—ã –¥–ª—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤",
    },
    {
      categoryId: 202004969,
      icon: "üçΩ",
      displayName: "–°—Ç—ë–∫–ª–∞ –∏ –ø–ª—ë–Ω–∫–∏ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤",
    },
    {
      categoryId: 202001970,
      icon: "üçΩ",
      displayName: "–ö–∞–±–µ–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤",
    },
  ];
}
